version: '3.7'

services:
  zookeeper: 
    image: zookeeper:3.8.0-temurin
    container_name: zookeeper
    hostname: zookeeper
    ports:
      - 2181:2181
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181      

  broker-1:
    image: confluentinc/cp-kafka:7.3.0
    container_name: broker1
    hostname: broker1
    ports:
      - 9094:9094
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://broker1:9092,PLAINTEXT_HOST://localhost:9094
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    depends_on:
      - zookeeper
  
  init-kafka:
    image: confluentinc/cp-kafka:7.3.0
    container_name: init-kafka
    depends_on:
      - broker-1
    entrypoint: [ '/bin/sh', '-c']
    command: |
      "
      # blocks until kafka is reachable
      kafka-topics --bootstrap-server broker-1:9092 --list

      echo -e 'Creating kafka topics'
      kafka-topics --bootstrap-server broker-1:9092 --create --if-not-exists --topic create-user --replication-factor 1 --partitions 1
      kafka-topics --bootstrap-server broker-1:9092 --create --if-not-exists --topic user-created --replication-factor 1 --partitions 1

      echo -e 'Successfully created the following topics:'
      kafka-topics --bootstrap-server broker-1:9092 --list
      "
  
  jaeger:
    image: jaegertracing/all-in-one:latest
    container_name: jaeger
    ports:
      - "6831:6831/udp"
      - "16686:16686"